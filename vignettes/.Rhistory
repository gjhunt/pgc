library(pgc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#library(pgc)
devtools::load_all('../../pgc/')
# number of trials
samplesize = 50
N_seq = sapply(1:samplesize,function(i){
x = rnbinom(1,mu=50,size=5)
while(x<50)
x = rnbinom(1,mu=50,size=5)
return(x)
})
n_seq = sapply(5*N_seq,function(m){
x = rnbinom(1,mu=m,size=5)
return(x)
})
N_seq[N_seq==0] = 1
n_seq[n_seq==0] = 1
head(N_seq)
head(n_seq)
require('extraDistr')
true_alpha = 0.05
true_beta = 0.1
T_seq = sapply(1:samplesize,function(i)
suppressWarnings({extraDistr::rbetapr(1,shape1=n_seq[i],shape2=true_alpha*N_seq[i],scale=true_beta)
}))
head(T_seq)
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
#library(pgc)
devtools::load_all('../../pgc/')
pgc:::estimate
#library(pgc)
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
library(pgc)
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
out
out
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
out
devtools::load_all('../../pgc')
out = pgc::estimate(T_seq=T_seq,N_seq=N_seq,n_seq=n_seq,
verbose=TRUE)
out
true_alpha/true_beta
true_beta
